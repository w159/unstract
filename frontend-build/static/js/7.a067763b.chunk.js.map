{"version":3,"file":"static/js/7.a067763b.chunk.js","mappings":"wMAIA,MAAM,SAAEA,GAAaC,EAAAA,QAErB,SAASC,EAAWC,GAUhB,IAViB,KACnBC,EAAO,GAAE,YACTC,EAAc,GAAE,OAChBC,EAASA,SAAQ,QACjBC,EAAUA,SAAQ,QAClBC,EAAU,CAAC,EAAC,YACZC,EAAcA,SAAQ,UACtBC,EAAY,CAAC,EAAC,cACdC,EAAa,iBACbC,GACDT,EACC,MAAOU,EAAiBC,IAAsBC,EAAAA,EAAAA,WAAS,GACjDC,GAAUC,EAAAA,EAAAA,QAAOb,GACjBc,GAAiBD,EAAAA,EAAAA,QAAOZ,IACvBc,GAAQC,EAAAA,EAAKC,UAUpB,SAASC,IACP,MAAMC,GAAeP,EAAQQ,QACvBC,GAAsBP,EAAeM,QAC3CV,EAAmBS,GAAeE,EACpC,CA8BA,OACEC,EAAAA,EAAAA,KAACC,EAAAA,EAAK,CACJC,MAAOxB,EAAO,gBAAkB,eAChCyB,KAAMnB,EACNoB,SAhCJ,WACErB,GAAY,GACZF,GACF,EA8BIwB,KA5BJ,WACEzB,EAAOU,EAAQQ,QAASN,EAAeM,QACzC,EA2BIQ,UAAQ,EACRC,cAAc,EACdC,OAAQ9B,EAAO,gBAAkB,kBACjC+B,MAAM,QACNC,cAAe,CAAEC,SAAUxB,EAAiBL,QAASA,GAAU8B,UAE/DC,EAAAA,EAAAA,MAACnB,EAAAA,EAAI,CACHhB,KAAK,eACLoC,SAAU,CAAEC,KAAM,GAClBC,WAAY,CAAED,KAAM,IACpBE,eAnCqBC,IACzB,MAAMC,EAAmBC,OAAOC,KAAKH,GAAe,GACpDzB,EAAK6B,UAAU,CACb,CACE5C,KAAMyC,EACNI,OAAQ,MAGZrC,GAAkBsC,IAChB,GAAIA,EAAY,CACd,MAAMC,EAAgBD,EAAWD,OAAOG,QACrCC,GAAUA,EAAMC,OAAST,IAE5B,MAAO,IAAKK,EAAYD,OAAQE,EAClC,CACA,OAAO,IAAI,GACX,EAmBoCb,SAAA,EAElCZ,EAAAA,EAAAA,KAACN,EAAAA,EAAKmC,KAAI,CACRC,MAAM,gBACNpD,KAAK,gBACLqD,MAAO,CAAC,CAAEC,UAAU,EAAMC,QAAS,gCACnCnB,SAAU,CAAEC,KAAM,IAClBC,WAAY,CAAED,KAAM,IACpBmB,gBACEC,EAAAA,EAAAA,IAAsB,gBAAiBlD,GAAiB,QAAU,GAEpEmD,MAAMD,EAAAA,EAAAA,IAAsB,gBAAiBlD,GAAe2B,UAE5DZ,EAAAA,EAAAA,KAACzB,EAAAA,QAAK,CAAC8D,aAAc/C,EAAQQ,QAASwC,SAvE9C,SAAmBC,GAAyB,IAAtBC,QAAQ,MAAEC,IAASF,EACvCjD,EAAQQ,QAAU2C,EAAMC,OACxB9C,GACF,OAsEMI,EAAAA,EAAAA,KAACN,EAAAA,EAAKmC,KAAI,CACRC,MAAM,cACNpD,KAAK,uBACLqD,MAAO,CAAC,CAAEC,UAAU,EAAMC,QAAS,8BACnCnB,SAAU,CAAEC,KAAM,IAClBC,WAAY,CAAED,KAAM,IACpBmB,gBACEC,EAAAA,EAAAA,IAAsB,uBAAwBlD,GAC1C,QACA,GAENmD,MAAMD,EAAAA,EAAAA,IAAsB,uBAAwBlD,GAAe2B,UAEnEZ,EAAAA,EAAAA,KAAC1B,EAAQ,CACP+D,aAAc7C,EAAeM,QAC7B6C,SAAU,CAAEC,QAAS,EAAGC,QAAS,GACjCP,SArFV,SAA0BQ,GAAyB,IAAtBN,QAAQ,MAAEC,IAASK,EAC9CtD,EAAeM,QAAU2C,EAAMC,OAC/B9C,GACF,UAwFF,C","sources":["components/workflows/new-workflow/NewWorkflow.jsx"],"sourcesContent":["import { Form, Input, Modal } from \"antd\";\nimport PropTypes from \"prop-types\";\nimport { useRef, useState } from \"react\";\nimport { getBackendErrorDetail } from \"../../../helpers/GetStaticData\";\nconst { TextArea } = Input;\n\nfunction NewWorkflow({\n  name = \"\",\n  description = \"\",\n  onDone = () => {},\n  onClose = () => {},\n  loading = {},\n  toggleModal = () => {},\n  openModal = {},\n  backendErrors,\n  setBackendErrors,\n}) {\n  const [disableCreation, setDisableCreation] = useState(true);\n  const nameRef = useRef(name);\n  const descriptionRef = useRef(description);\n  const [form] = Form.useForm();\n\n  function updateName({ target: { value } }) {\n    nameRef.current = value.trim();\n    updateCreationStatus();\n  }\n  function updateDescription({ target: { value } }) {\n    descriptionRef.current = value.trim();\n    updateCreationStatus();\n  }\n  function updateCreationStatus() {\n    const isNameEmpty = !nameRef.current;\n    const isDescriptionEmpty = !descriptionRef.current;\n    setDisableCreation(isNameEmpty || isDescriptionEmpty);\n  }\n\n  function onCancel() {\n    toggleModal(false);\n    onClose();\n  }\n\n  function onCreate() {\n    onDone(nameRef.current, descriptionRef.current);\n  }\n\n  const handleInputChange = (changedValues) => {\n    const changedFieldName = Object.keys(changedValues)[0];\n    form.setFields([\n      {\n        name: changedFieldName,\n        errors: [],\n      },\n    ]);\n    setBackendErrors((prevErrors) => {\n      if (prevErrors) {\n        const updatedErrors = prevErrors.errors.filter(\n          (error) => error.attr !== changedFieldName\n        );\n        return { ...prevErrors, errors: updatedErrors };\n      }\n      return null;\n    });\n  };\n\n  return (\n    <Modal\n      title={name ? \"Edit Workflow\" : \"New Workflow\"}\n      open={openModal}\n      onCancel={onCancel}\n      onOk={onCreate}\n      centered\n      maskClosable={false}\n      okText={name ? \"Edit Workflow\" : \"Create Workflow\"}\n      width=\"400px\"\n      okButtonProps={{ disabled: disableCreation, loading: loading }}\n    >\n      <Form\n        name=\"workflowForm\"\n        labelCol={{ span: 8 }}\n        wrapperCol={{ span: 16 }}\n        onValuesChange={handleInputChange}\n      >\n        <Form.Item\n          label=\"Workflow Name\"\n          name=\"workflow_name\"\n          rules={[{ required: true, message: \"Please enter Workflow name!\" }]}\n          labelCol={{ span: 24 }}\n          wrapperCol={{ span: 24 }}\n          validateStatus={\n            getBackendErrorDetail(\"workflow_name\", backendErrors) ? \"error\" : \"\"\n          }\n          help={getBackendErrorDetail(\"workflow_name\", backendErrors)}\n        >\n          <Input defaultValue={nameRef.current} onChange={updateName} />\n        </Form.Item>\n        <Form.Item\n          label=\"Description\"\n          name=\"workflow_description\"\n          rules={[{ required: true, message: \"Please enter Description!\" }]}\n          labelCol={{ span: 24 }}\n          wrapperCol={{ span: 24 }}\n          validateStatus={\n            getBackendErrorDetail(\"workflow_description\", backendErrors)\n              ? \"error\"\n              : \"\"\n          }\n          help={getBackendErrorDetail(\"workflow_description\", backendErrors)}\n        >\n          <TextArea\n            defaultValue={descriptionRef.current}\n            autoSize={{ minRows: 4, maxRows: 6 }}\n            onChange={updateDescription}\n          />\n        </Form.Item>\n      </Form>\n    </Modal>\n  );\n}\n\nNewWorkflow.propTypes = {\n  name: PropTypes.string,\n  description: PropTypes.string,\n  loading: PropTypes.bool,\n  onDone: PropTypes.func,\n  onClose: PropTypes.func,\n  openModal: PropTypes.bool,\n  toggleModal: PropTypes.func,\n  setBackendErrors: PropTypes.func,\n  backendErrors: PropTypes.object,\n};\n\nexport { NewWorkflow };\n"],"names":["TextArea","Input","NewWorkflow","_ref","name","description","onDone","onClose","loading","toggleModal","openModal","backendErrors","setBackendErrors","disableCreation","setDisableCreation","useState","nameRef","useRef","descriptionRef","form","Form","useForm","updateCreationStatus","isNameEmpty","current","isDescriptionEmpty","_jsx","Modal","title","open","onCancel","onOk","centered","maskClosable","okText","width","okButtonProps","disabled","children","_jsxs","labelCol","span","wrapperCol","onValuesChange","changedValues","changedFieldName","Object","keys","setFields","errors","prevErrors","updatedErrors","filter","error","attr","Item","label","rules","required","message","validateStatus","getBackendErrorDetail","help","defaultValue","onChange","_ref2","target","value","trim","autoSize","minRows","maxRows","_ref3"],"sourceRoot":""}